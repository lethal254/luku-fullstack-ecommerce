[{"/media/lethal/Projects/projects/Luku/front-end/luku/src/index.js":"1","/media/lethal/Projects/projects/Luku/front-end/luku/src/App.js":"2","/media/lethal/Projects/projects/Luku/front-end/luku/src/serviceWorker.js":"3","/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/home/Home.js":"4","/media/lethal/Projects/projects/Luku/front-end/luku/src/components/slider/Slider.js":"5","/media/lethal/Projects/projects/Luku/front-end/luku/src/axios.js":"6","/media/lethal/Projects/projects/Luku/front-end/luku/src/components/header/Header.js":"7","/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/shop/Shop.js":"8","/media/lethal/Projects/projects/Luku/front-end/luku/src/components/cards/Card.js":"9","/media/lethal/Projects/projects/Luku/front-end/luku/src/components/categories/Categories.js":"10","/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/cart/cart.js":"11","/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/store/store.js":"12","/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/productsSlice.js":"13","/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/cartSlice.js":"14","/media/lethal/Projects/projects/Luku/front-end/luku/src/components/cartItem/cartItem.js":"15","/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/sliderSlice.js":"16","/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/categorySlice.js":"17","/media/lethal/Projects/projects/Luku/front-end/luku/src/helpers/caching.js":"18","/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/Auth/login/login.js":"19","/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/Auth/signup/signup.js":"20","/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/account/account.js":"21","/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/userSlice.js":"22"},{"size":752,"mtime":1612124789687,"results":"23","hashOfConfig":"24"},{"size":1054,"mtime":1612527373141,"results":"25","hashOfConfig":"24"},{"size":5141,"mtime":1611658336790,"results":"26","hashOfConfig":"24"},{"size":335,"mtime":1611778951728,"results":"27","hashOfConfig":"24"},{"size":1673,"mtime":1612555325565,"results":"28","hashOfConfig":"24"},{"size":145,"mtime":1612664232801,"results":"29","hashOfConfig":"24"},{"size":1868,"mtime":1612664065238,"results":"30","hashOfConfig":"24"},{"size":2395,"mtime":1612227201123,"results":"31","hashOfConfig":"24"},{"size":1389,"mtime":1612444880865,"results":"32","hashOfConfig":"24"},{"size":845,"mtime":1612227113556,"results":"33","hashOfConfig":"24"},{"size":3122,"mtime":1612661019512,"results":"34","hashOfConfig":"24"},{"size":490,"mtime":1612490979227,"results":"35","hashOfConfig":"24"},{"size":890,"mtime":1612233941055,"results":"36","hashOfConfig":"24"},{"size":1672,"mtime":1612447186756,"results":"37","hashOfConfig":"24"},{"size":1962,"mtime":1612560949827,"results":"38","hashOfConfig":"24"},{"size":1272,"mtime":1612235446414,"results":"39","hashOfConfig":"24"},{"size":989,"mtime":1612233515859,"results":"40","hashOfConfig":"24"},{"size":234,"mtime":1612232764241,"results":"41","hashOfConfig":"24"},{"size":1367,"mtime":1612658391078,"results":"42","hashOfConfig":"24"},{"size":1874,"mtime":1612658433902,"results":"43","hashOfConfig":"24"},{"size":2130,"mtime":1612666325003,"results":"44","hashOfConfig":"24"},{"size":622,"mtime":1612659400305,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"6ik2aa",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/media/lethal/Projects/projects/Luku/front-end/luku/src/index.js",[],["96","97"],"/media/lethal/Projects/projects/Luku/front-end/luku/src/App.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/serviceWorker.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/home/Home.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/components/slider/Slider.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/axios.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/components/header/Header.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/shop/Shop.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/components/cards/Card.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/components/categories/Categories.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/cart/cart.js",["98"],"import React, { useEffect } from \"react\";\nimport cartStyles from \"./cart.module.css\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  loadCart,\n  selectCart,\n  selectTotalPrice,\n  updateTotal,\n} from \"../../redux/slices/cartSlice\";\nimport CartItem from \"../../components/cartItem/cartItem\";\nimport { useHistory } from \"react-router-dom\";\nimport StripeCheckout from \"react-stripe-checkout\";\n\nfunction Cart() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCart);\n    dispatch(updateTotal());\n  }, [dispatch]);\n  let history = useHistory();\n  const cartItems = useSelector(selectCart);\n  const total = useSelector(selectTotalPrice);\n  const handleToken = (token, adddresses) => {\n    console.log({ token, adddresses });\n  };\n  return (\n    <div className={cartStyles.cart}>\n      <Table className={cartStyles.cart__upper}>\n        <TableHead>\n          <TableRow>\n            <TableCell className={cartStyles.cart__header}>Item</TableCell>\n            <TableCell className={cartStyles.cart__header} align='right'>\n              Price (Ksh)\n            </TableCell>\n            <TableCell className={cartStyles.cart__header} align='right'>\n              Quantity\n            </TableCell>\n            <TableCell className={cartStyles.cart__header} align='right'>\n              Total (Ksh)\n            </TableCell>\n            <TableCell\n              className={cartStyles.cart__header}\n              align='right'></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {cartItems?.map((product) => {\n            return (\n              <CartItem\n                key={product.id}\n                id={product.id}\n                price={product.price}\n                image={product.image}\n                quantity={product.quantity}\n              />\n            );\n          })}\n          <TableRow>\n            <TableCell className={cartStyles.cart__details}></TableCell>\n            <TableCell\n              className={cartStyles.cart__details}\n              align='right'></TableCell>\n            <TableCell\n              className={cartStyles.cart__details}\n              align='right'></TableCell>\n            <TableCell className={cartStyles.cart__details} align='right'>\n              Total:{total}\n            </TableCell>\n            <TableCell className={cartStyles.cart__details} align='right'>\n              <StripeCheckout\n                disabled={cartItems.length === 0}\n                stripeKey='pk_test_51IHDfYHXhyBi5fNEWByqlL27AzW32jjXKF5Nv5aFw1HpuUQBFUFJh1Okb7SOiOBodgm6oghYMb70Ch2OAqYugRL600CM6A83rz'\n                token={handleToken}\n                billingAddress\n                shippingAddress\n                amount={total * 100}\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport default Cart;\n","/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/store/store.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/productsSlice.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/cartSlice.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/components/cartItem/cartItem.js",["99"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  increaseItems,\n  removeFromCart,\n  updateTotal,\n} from \"../../redux/slices/cartSlice\";\nimport cartItemStyles from \"./cartItem.module.css\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Button } from \"@material-ui/core\";\n\nfunction CartItem({ id, image, price, quantity }) {\n  const dispatch = useDispatch();\n  const removeFromLocalStorage = (id) => {\n    const items = JSON.parse(localStorage.getItem(\"cart\"));\n    const filteredItems = items.filter((item) => item.id !== id);\n    localStorage.setItem(\"cart\", JSON.stringify(filteredItems));\n  };\n  return (\n    <TableRow key={id}>\n      <TableCell className={cartItemStyles.cart__details}>\n        <img\n          alt='product'\n          src={image}\n          className={cartItemStyles.cart__productimage}\n        />\n      </TableCell>\n      <TableCell className={cartItemStyles.cart__details} align='right'>\n        {parseInt(price.replace(\"Ksh.\", \"\"))}\n      </TableCell>\n      <TableCell className={cartItemStyles.cart__details} align='right'>\n        <input\n          className={cartItemStyles.cart__input}\n          type='text'\n          onChange={(e) => {\n            dispatch(increaseItems({ id, quantity: e.target.value || 1 }));\n            dispatch(updateTotal());\n          }}\n        />\n      </TableCell>\n      <TableCell className={cartItemStyles.cart__details} align='right'>\n        {parseInt(price.replace(\"Ksh.\", \"\")) * quantity}\n      </TableCell>\n      <TableCell className={cartItemStyles.cart__details} align='right'>\n        <Button\n          variant='outlined'\n          onClick={() => {\n            dispatch(removeFromCart({ id }));\n            dispatch(updateTotal());\n            removeFromLocalStorage(id);\n          }}>\n          Remove\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport default CartItem;\n","/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/sliderSlice.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/categorySlice.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/helpers/caching.js",[],"/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/Auth/login/login.js",["100"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport loginStyles from \"./login.module.css\";\nimport axios from \"../../../axios\";\nimport { useDispatch } from \"react-redux\";\nimport { addUser, loadToken } from \"../../../redux/slices/userSlice\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onFormSubmit = async (e) => {\n    e.preventDefault();\n    const response = await axios.post(\"/login\", { email, password });\n    dispatch(addUser({ user: response.data.user }));\n    dispatch(loadToken({ token: response.data.token }));\n\n    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n    localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n  };\n  return (\n    <div className={loginStyles.loginContainer}>\n      <form className={loginStyles.form} onSubmit={onFormSubmit}>\n        <input\n          type='email'\n          placeholder='Email'\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type='submit' className={loginStyles.loginButton}>\n          Login\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/Auth/signup/signup.js",[],["101","102"],"/media/lethal/Projects/projects/Luku/front-end/luku/src/pages/account/account.js",["103"],"import React from \"react\";\nimport Login from \"../Auth/login/login\";\nimport accountStyles from \"./account.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  loadToken,\n  removeUser,\n  selectToken,\n  selectUser,\n} from \"../../redux/slices/userSlice\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Signup from \"../Auth/signup/signup\";\nimport { Link, Route, useHistory } from \"react-router-dom\";\n\nfunction Account() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const history = useHistory();\n  return (\n    <div className={accountStyles.accountContainer}>\n      {!user?.name ? (\n        <div className={accountStyles.auth}>\n          <div className={accountStyles.nav}>\n            <Link className={accountStyles.link} to='/account/login'>\n              Login\n            </Link>\n            <Link to='/account/signup' className={accountStyles.link}>\n              Signup\n            </Link>\n          </div>\n          <Route path='/account/login' component={Login} />\n          <Route path='/account/signup' component={Signup} />\n        </div>\n      ) : (\n        <div className={accountStyles.container}>\n          <div className={accountStyles.semiCircle}>\n            <h1>Welcome, {user?.name}</h1>\n            <Avatar\n              src='https://images.pexels.com/photos/5514779/pexels-photo-5514779.jpeg?cs=srgb&dl=pexels-kei-scampa-5514779.jpg&fm=jpg'\n              className={accountStyles.avatar}\n            />\n            <h2>@{user?.username}</h2>\n            <h2>{user?.email}</h2>\n            <button\n              type='submit'\n              className={accountStyles.logoutButton}\n              onClick={() => {\n                dispatch(loadToken({ token: \"\" }));\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"user\");\n                dispatch(removeUser());\n                history.push(\"/account/login\");\n              }}>\n              Logout\n            </button>\n          </div>\n          <div className={accountStyles.lower}></div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Account;\n","/media/lethal/Projects/projects/Luku/front-end/luku/src/redux/slices/userSlice.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":25,"column":7,"nodeType":"110","messageId":"111","endLine":25,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":34},{"ruleId":"108","severity":1,"message":"113","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"104","replacedBy":"114"},{"ruleId":"106","replacedBy":"115"},{"ruleId":"108","severity":1,"message":"116","line":8,"column":3,"nodeType":"110","messageId":"111","endLine":8,"endColumn":14},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Link' is defined but never used.",["117"],["118"],"'selectToken' is defined but never used.","no-global-assign","no-unsafe-negation"]